Sandshark UUV Code Setup and Build Procedure

All of the code for the Sandshark AUV (vehicle side) resides in this repository.  The following text will explain the setup and build procedure.  If you have any issues when working through the document, email sandshark-maintainer@bluefinrobotics.com

Vehicle-Side Instructions (The following instructions were designed and tested for an Ubuntu 14.04.03 system):

-Setting up your environment and getting ROS
--Download and install ROS Indigo "Desktop Install" by following the instructions at: http://wiki.ros.org/indigo/Installation/Ubuntu

-Setting up the sysroot (an arm sysroot including ros compiled for arm is used to cross compile the code for the Sandshark)
--Make a /usr/local/bluefin directory (mkdir -p /usr/local/bluefin)
--Extract the contents of .../vehicle/adapt-sysroot.tar.bz2 into /usr/local/bluefin
--Make the following symlinks:
sudo mkdir /home/adapt/rosalign
ln -s /usr/local/bluefin/adapt-sysroot/ros_install_isolated install_isolated
sudo mkdir /home/adapt/ADAPT
ln -s /usr/local/bluefin/adapt-sysroot titan-sysroot

-Building the code
--Make a /data/app/bluefin/opt/ros_xc directory (sudo mkdir /data/app/bluefin/opt/ros_xc)  This is where catkin will put all of the executables and libraries after they are built
--Run the build_arm.sh script in the .../vehicle/ros directory.  The build should complete in around 2 minutes.

-Deploying code to the vehicle
--To deploy code to a vehicle, ensure that the build machine is on the same network and run the build_arm.sh script with the vehicle's IP address as an argument (./build_arm.sh xxx.xxx.xxx.xxx)



